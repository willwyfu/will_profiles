#!/bin/bash
magic='--calling-python-from-/bin/sh--'
"""exec" python -E "$0" "$@" """#$magic"

# python language:

class COLOR:
    HEADER = '\033[35m'
    BLUE = '\033[94m'
    GREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    END = '\033[0m'
    B_GREEN = '\033[0;42m'
    B_BLUE = '\033[0;44m'
    HL = '\033[7m'

    def disable(self):
        self.HEADER = ''
        self.BLUE = ''
        self.GREEN = ''
        self.WARNING = ''
        self.FAIL = ''
        self.END = ''
	self.B_GREEN = ''
	self.B_BLUE = ''
	self.HL = ''

import sys, subprocess, os, re
if __name__ == '__main__':
	#set srgs
	ss=""
	path=""
	if len(sys.argv)<= 2 or len(sys.argv) >= 5:
		print "format: ss search_string [path]"
	else:
		if len(sys.argv)== 4:
			if os.path.exists(sys.argv[1]):
				path = sys.argv[1]
				ss = sys.argv[2]
			elif os.path.exists(sys.argv[2]):
				ss = sys.argv[1]
				path = sys.argv[2]
			else :
				print "Path not found!"
				sys.exit(0)
		elif len(sys.argv)== 3:
			ss = sys.argv[1]

		command="find ./"+path+" -name .svn -prune -o -name .repo -prune -o -name .git -prune -o -name \"cscope.*\" -prune -o"
		command=command+" -print0 | xargs -0 -n1 -P16 grep -n -s -iH \""+ss+"\" "
		output,err = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT).communicate()
		output_list = output.split("\n")

		if not output_list or len(output_list) <= 1:
			print "File not found!"
			sys.exit(0)
		print "===================================================================================================================="
		for i in range(len(output_list)-1):
			output_line = output_list[i].split(':',2)
			if len(output_line) == 3:
				cs=re.search(ss, output_line[2], re.I)
				if cs:
					print str(i+1)+": "+COLOR.HEADER+output_line[0]+" +"+output_line[1]+COLOR.END+" "+output_line[2][:cs.start()]+COLOR.FAIL+cs.group(0)+COLOR.END+output_line[2][cs.end():]
					#print output_line[2].replace(ss,COLOR.FAIL+ss+COLOR.END)
					output_list[i] = output_line[0]+" +"+output_line[1]
			else:
				cs=re.search(ss, output_list[i], re.I)
				if cs:
					print str(i+1)+": "+output_list[i][:cs.start()]+COLOR.FAIL+cs.group(0)+COLOR.END+output_list[i][cs.end():]

       		input = raw_input("Select: ")
		try:
			if int(input)<len(output_list):
				os.system("vim "+output_list[int(input)-1])
		except Exception:
			sys.exit(0)

